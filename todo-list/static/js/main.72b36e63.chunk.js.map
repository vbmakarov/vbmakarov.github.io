{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button.module.css","containers/Auth/Auth.module.css","components/UI/Input/input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/UI/Loader/Loader.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","store/actions/typesCreate.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","reportWebVitals.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","active","activeLink","Drawer","console","log","this","isAuthentication","links","to","label","map","link","index","isActive","undefined","onClose","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","length","onRetry","Loader","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","SET_ANSWER_STATE","SET_ACTIVE_QUESTION","QUIZ_IS_FINISHED","RETRY_HANDLER","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizesStart","fetchQuizSuccess","loading","fetchQuizesSuccess","quizes","fetchQuizesError","e","quizSetAnswerState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","Quizz","params","fetchQuizById","quizRetryHandler","Quiz","QuizWrapper","isFinished","a","get","response","data","useParams","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","authSuccess","sessionId","autoLogout","time","logout","localStorage","removeItem","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","onChangeHandler","event","controlName","control","target","validateControl","submitHandler","preventDefault","isValid","trim","test","String","toLowerCase","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","idToken","expirationDate","Date","getTime","expiresIn","setItem","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","CREATE_QUIZ_QUESTION","FINISH_ADD_QUIZ","FINISH_ADD_ERROR","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","onSubmitHandler","addQuestionHandler","concat","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","renderControls","selectChangeHandler","select","item","Logout","authLogin","getItem","useEffect","routes","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","error","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72b36e63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3KMYy\",\"close\":\"Drawer_close__1PukL\",\"activeLink\":\"Drawer_activeLink__2aLlJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__2ekuf\",\"open\":\"MenuToggle_open__1AEyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2NHRR\",\"QuizWrapper\":\"Quiz_QuizWrapper__2_di9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1TYbY\",\"Question\":\"ActiveQuiz_Question__3DcTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3Z0fh\",\"success\":\"AnswerItem_success__1oG22\",\"error\":\"AnswerItem_error__3_s-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2p5ln\",\"success\":\"FinishedQuiz_success__2dTlS\",\"error\":\"FinishedQuiz_error__3iVHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3uckU\",\"success\":\"Button_success__VJDq2\",\"error\":\"Button_error__17fIn\",\"primary\":\"Button_primary__1H_6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__ako7-\",\"AuthForm\":\"Auth_AuthForm__3Y2ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__3tYHu\",\"invalid\":\"input_invalid__2nJRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__9EmXk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2e9vY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1Ex1g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__JUdVW\",\"lds-ripple\":\"Loader_lds-ripple__VDu-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__21G_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3IjzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1ndvg\"};","import React from \"react\";\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = (props) => {\r\n   const cls = [\r\n       classes.MenuToggle,\r\n       'fa',\r\n   ]\r\n\r\n    if(props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    }else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick = {props.onToggle}\r\n        >\r\n\r\n        </i>\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from \"react\";\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = (props) => <div className = {classes.Backdrop} onClick = {props.onClick}/>\r\n\r\nexport default Backdrop","import React, {Component} from \"react\";\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst active = classes.activeLink\r\n\r\nclass Drawer extends Component {\r\n\r\n    renderLinks(){\r\n        console.log(this.props.isAuthentication)\r\n        const links = [\r\n            {to: '/', label: 'Список'},\r\n        ]\r\n\r\n        if(this.props.isAuthentication){\r\n            links.push({to: '/quiz-creator', label: 'Создать тест'})\r\n            links.push({to: '/logout', label: 'Выйти'})\r\n        }else {\r\n            links.push({to: '/auth', label: 'Авторизация'})\r\n        }\r\n        return links.map((link, index)=>{\r\n            return (\r\n                <li key = {index}>\r\n                    <NavLink to = {link.to} className={({ isActive }) =>\r\n                        isActive ? active : undefined}\r\n                             onClick = {this.props.onClose}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if(!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n            <nav className={cls.join(' ')}>\r\n                <ul>\r\n                    {this.renderLinks()}\r\n                </ul>\r\n            </nav>\r\n                {this.props.isOpen?<Backdrop onClick = {this.props.onClose}/>: null }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from \"react\";\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    menuCloseHandler= () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer\r\n                    isOpen = {this.state.menu}\r\n                    onClose = {this.menuCloseHandler}\r\n                    isAuthentication = {this.props.isAuthentication}\r\n                />\r\n                <MenuToggle\r\n                    onToggle = {this.toggleMenuHandler}\r\n                    isOpen = {this.state.menu}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthentication: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Layout)","import React from 'react'\r\nimport classes from'./AnswerItem.module.css'\r\n\r\nconst AnswerItem = (props) => {\r\n\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if(props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick = {() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.module.css'\r\nimport AnswersItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = (props) => {\r\n    return (\r\n        <ul className = {classes.AnswersList}>\r\n            {\r\n                props.answers.map((answer, index)=>{\r\n                    return (\r\n                        <AnswersItem\r\n                            state = {props.state? props.state[answer.id]: null}\r\n                            key = {index}\r\n                            answer = {answer}\r\n                            onAnswerClick = {props.onAnswerClick}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswersList","import React from \"react\";\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nexport const ActiveQuiz = (props) => {\r\n   return (\r\n       <div className={classes.ActiveQuiz}>\r\n           <p className={classes.Question}>\r\n              <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n                  {props.question}\r\n              </span>\r\n               <small>{props.answerNumber} из {props.quizLength}</small>\r\n           </p>\r\n            <AnswersList\r\n                state = {props.state}\r\n                answers = {props.answers}\r\n                onAnswerClick = {props.onAnswerClick}\r\n            />\r\n        </div>\r\n   )\r\n}","import React from \"react\";\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button\r\n            onClick = {props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = props => {\r\n    console.log(props)\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n\r\n        return total\r\n    }, 0)\r\n\r\n    return (\r\n        <div className = {classes.FinishedQuiz}>\r\n            <ul>\r\n                {\r\n                    props.quiz.map((quizItem, index)=>{\r\n                        const cls = [\r\n                            'fa',\r\n                            props.results[quizItem.id] === 'error'? 'fa-times': 'fa-check',\r\n                            classes[props.results[quizItem.id]]\r\n                        ]\r\n                        return (\r\n                            <li key = {index}>\r\n                                <strong>{index + 1}.</strong> &nbsp;\r\n                                {quizItem.question}\r\n                                <i className={cls.join(' ')}></i>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                {/*<li>*/}\r\n                {/*    <strong>*/}\r\n                {/*        1. How are you*/}\r\n                {/*        <i className={'fa fa-times' + ' ' + classes.error}></i>*/}\r\n                {/*    </strong>*/}\r\n                {/*</li>*/}\r\n                {/*<li>*/}\r\n                {/*    <strong>*/}\r\n                {/*        2. How are you*/}\r\n                {/*        <i className={'fa fa-check' + ' ' + classes.success}></i>*/}\r\n                {/*    </strong>*/}\r\n                {/*</li>*/}\r\n            </ul>\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetry} type = \"primary\">\r\n                    Повторить\r\n                </Button>\r\n                <Link to = '/'>\r\n                <Button onClick={props.onRetry} type = \"success\">\r\n                    Перейти в список тестов\r\n                </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from \"react\";\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => {\r\n    return (\r\n        <div className = {classes.Loader}>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-112dd-default-rtdb.firebaseio.com/'\r\n})","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\nexport const SET_ANSWER_STATE = 'SET_ANSWER_STATE'\r\nexport const SET_ACTIVE_QUESTION = 'SET_ACTIVE_QUESTION'\r\nexport const QUIZ_IS_FINISHED = 'QUIZ_IS_FINISHED'\r\nexport const RETRY_HANDLER = 'RETRY_HANDLER'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import axios from '../../axios/axios-quiz'\r\nimport {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS, QUIZ_IS_FINISHED, RETRY_HANDLER, SET_ACTIVE_QUESTION,\r\n    SET_ANSWER_STATE\r\n} from \"./actionTypes\";\r\n\r\nexport function fetchQuizes() {\r\n    return async  dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try{\r\n            const response = await axios.get('/quizes.json')\r\n            const quizes = []\r\n            Object.keys(response.data).forEach((key, index)=>{\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Тест № ${index + 1}`\r\n                })\r\n            })\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        }catch(e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(id) {\r\n    console.log(id)\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try{\r\n            const response = await axios.get(`/quizes/${id}.json`)\r\n            const quiz = response.data\r\n            console.log(quiz)\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        }catch (e){\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        loading: false,\r\n        quiz: quiz\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes: quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR\r\n    }\r\n}\r\n\r\nexport function quizSetAnswerState(id, results) {\r\n    return {\r\n        type: SET_ANSWER_STATE,\r\n        answerState: id,\r\n        results: results\r\n    }\r\n}\r\n\r\nexport function quizSetActiveQuestion(activeQuestion) {\r\n    return {\r\n        type: SET_ACTIVE_QUESTION,\r\n        activeQuestion\r\n    }\r\n}\r\n\r\nexport function quizIsFinished() {\r\n    return {\r\n        type: QUIZ_IS_FINISHED\r\n    }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz\r\n\r\n        if(state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if(state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = state.quiz[state.activeQuestion]\r\n        const results = state.results\r\n\r\n        if(question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n            dispatch(quizSetAnswerState({[answerId]: 'success'}, results))\r\n\r\n            const timeout = window.setTimeout(()=>{\r\n                if(isQuizFinished(state)){\r\n                    dispatch(quizIsFinished())\r\n                }else {\r\n                    dispatch(quizSetActiveQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n        } else{\r\n            results[question.id] = 'error'\r\n            dispatch(quizSetAnswerState({[answerId]: 'error'}, results))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function quizRetryHandler() {\r\n    return {\r\n        type: RETRY_HANDLER\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport {ActiveQuiz} from '../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from \"../components/FinishedQuiz/FinishedQuiz\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Loader from '../components/UI/Loader/Loader'\r\nimport {fetchQuizById, quizAnswerClick, quizRetryHandler} from \"../store/actions/quiz\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Quizz extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.params.fetchQuizById(this.props.params.id)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.params.quizRetryHandler()\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props.params)\r\n        return (\r\n            <div className = {classes.Quiz}>\r\n                <div className = {classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    {\r\n                        this.props.params.loading || !this.props.params.quiz\r\n                            ? <Loader/>\r\n                            : this.props.params.isFinished\r\n                                ?  <FinishedQuiz\r\n                                    results = {this.props.params.results}\r\n                                    quiz = {this.props.params.quiz}\r\n                                    onRetry = {this.props.params.quizRetryHandler}\r\n                                />\r\n                                :  <ActiveQuiz\r\n                                    answers = {this.props.params.quiz[this.props.params.activeQuestion].answers}\r\n                                    question ={this.props.params.quiz[this.props.params.activeQuestion].question}\r\n                                    onAnswerClick = {this.props.params.quizAnswerClick}\r\n                                    quizLength = {this.props.params.quiz.length}\r\n                                    answerNumber = {this.props.params.activeQuestion + 1}\r\n                                    state = {this.props.params.answerState}\r\n                                />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz:state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        quizRetryHandler: () => dispatch(quizRetryHandler())\r\n    }\r\n}\r\n\r\nfunction Quiz(props) {\r\n    let params = useParams()\r\n    params = {...props, ...params}\r\n    return <Quizz params = {params}/>\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from \"react\";\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizes} from \"../../store/actions/quiz\";\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map((quiz)=>{\r\n            return (\r\n                <li key = {quiz.id}>\r\n                  <NavLink to={'/quiz/' + quiz.id}>\r\n                      {quiz.name}\r\n                  </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Quiz List</h1>\r\n                    {this.props.loading && this.props.quizes.length === 0\r\n                        ? <Loader/>\r\n                        : <ul>\r\n                            {this.renderQuizes()}\r\n                          </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport classes from './input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && touched && shouldValidate\r\n}\r\n\r\nconst Input = (props) => {\r\n\r\n    const inputType = props.type || 'text'\r\n    const cls = [classes.Input]\r\n    const htmlFor = `${inputType} - ${Math.random()}`\r\n\r\n    if(isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className = {cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n                <input\r\n                    type= {inputType}\r\n                    id = {htmlFor}\r\n                    value = {props.value}\r\n                    onChange={props.onChange}\r\n                />\r\n            {\r\n                isInvalid(props)\r\n                    ?<span>{props.errorMessage || 'Введите верное значение'}</span>\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import axios from \"axios\";\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\r\n\r\nexport default function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCsRsRsoAuA7_OT-wfUs0HdbD-HQabXK18'\r\n\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCsRsRsoAuA7_OT-wfUs0HdbD-HQabXK18'\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(url, authData)\r\n            const data = response.data\r\n            console.log(data.idToken)\r\n            const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n            localStorage.setItem('token', data.idToken)\r\n            localStorage.setItem('expirationDate', expirationDate)\r\n            localStorage.setItem('userId', data.localId)\r\n\r\n            dispatch(authSuccess(data.idToken))\r\n            dispatch(autoLogout(data.expiresIn))\r\n        }catch(e) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function authSuccess(sessionId) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token: sessionId\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(()=>{\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function authLogin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        console.log(token)\r\n        if (!token) {\r\n          dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            }else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: AUTH_LOGOUT,\r\n        token: null\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport {connect} from 'react-redux'\r\nimport auth from \"../../store/actions/auth\";\r\n\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler= () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        )\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value\r\n        )\r\n    }\r\n\r\n    validateControl (value, validation) {\r\n\r\n        if(!validation) {\r\n            return true\r\n        }\r\n        let isValid = true\r\n\r\n        if(validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n\r\n        if(validation.email) {\r\n            isValid = validateEmail(value) && isValid\r\n        }\r\n\r\n        if(validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(this.state.formControls).forEach(name => {\r\n            isFormValid = formControls[controlName].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input\r\n                    key = {controlName + index}\r\n                    type = {control.type}\r\n                    value = {control.value}\r\n                    valid = {control.valid}\r\n                    touched = {control.touched}\r\n                    label = {control.label}\r\n                    shouldValidate = {!!control.validation}\r\n                    errorMessage = {control.errorMessage}\r\n                    onChange = {(event) => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n    render() {\r\n        return(\r\n            <div className = {classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form onSubmit = {this.submitHandler} className={classes.AuthForm}>\r\n                        {this.renderInputs()}\r\n\r\n                        <Button\r\n                            type= 'success'\r\n                            onClick = {this.loginHandler}\r\n                            disabled = {!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button type= 'primary'\r\n                                onClick = {this.registerHandler}\r\n                                disabled = {!this.state.isFormValid}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)\r\n\r\n","import React from 'react'\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label} - ${Math.random()}`\r\n\r\n    return (\r\n        <div className = {classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value = {props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {\r\n                    props.options.map((option, index)=>{\r\n                        return(\r\n                            <option\r\n                                key = {option.value + index}\r\n                                value={option.value}\r\n                            >\r\n                                {option.text}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate (value, validation = null) {\r\n    if(!validation){\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' && value\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n\r\n    for(let control in formControls) {\r\n        if(formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].value && isFormValid\r\n        }\r\n    }\r\n\r\n    return isFormValid\r\n}","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","export const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const FINISH_ADD_QUIZ = 'FINISH_ADD_QUIZ'\r\nexport const FINISH_ADD_ERROR = 'FINISH_ADD_ERROR'","import React, {Component} from \"react\";\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'Значение не может быть пустым',\r\n        id: number\r\n    }, {required:true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {required:true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n        }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault()\r\n        const quiz = this.props.quiz.concat()\r\n        const index = quiz.length + 1\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: index,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        }\r\n\r\n        this.props.createQuizQuestion(questionItem)\r\n\r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    createQuizHandler = (event) => {\r\n            event.preventDefault()\r\n           this.props.finishCreateQuiz()\r\n            this.setState({\r\n                isFormValid: false,\r\n                rightAnswerId: 1,\r\n                formControls: createFormControls()\r\n            })\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n\r\n        control.touched = true\r\n        control.value = value\r\n        control.valid = validate(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    }\r\n\r\n    renderControls = () => {\r\n        return Object.keys(this.state.formControls).map((controlName, index)=>{\r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n                <Auxiliary key={controlName + index}>\r\n                <Input\r\n                    label = {control.label}\r\n                    valid = {control.valid}\r\n                    value = {control.value}\r\n                    shouldValidate={!!control.validation}\r\n                    touched = {control.touched}\r\n                    errorMessage = {control.errorMessage}\r\n                    onChange={event => this.changeHandler(event.target.value, controlName)}\r\n\r\n                />\r\n                {index === 0? <hr/>: null}\r\n                </Auxiliary>\r\n            )\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = (event) => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const select = <Select\r\n        label = \"Выберете правильный ответ\"\r\n        value = {this.state.rightAnswerId}\r\n        onChange = {this.selectChangeHandler}\r\n        options = {\r\n            [\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4},\r\n            ]\r\n        }\r\n        />\r\n        return(\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.onSubmitHandler}>\r\n\r\n                        {this.renderControls()}\r\n                        {select}\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick = {this.addQuestionHandler}\r\n                            disabled = {!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick = {this.createQuizHandler}\r\n                            disabled = {this.props.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, FINISH_ADD_ERROR, FINISH_ADD_QUIZ} from \"./typesCreate\";\r\nimport axios from \"../../axios/axios-quiz\";\r\n\r\nexport function createQuizQuestion(questionItem) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        quiz: questionItem\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        try{\r\n            const state = getState()\r\n            await axios.post('/quizes.json', state.create.quiz)\r\n            dispatch(finishAddQuiz())\r\n        }catch (e) {\r\n            dispatch(finishError())\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function finishAddQuiz() {\r\n    return {\r\n        type :FINISH_ADD_QUIZ\r\n    }\r\n}\r\n\r\nexport function finishError() {\r\n    return {\r\n        type: FINISH_ADD_ERROR\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Navigate to={'/'}/>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n       logout: () => dispatch(logout())\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","// import logo from './logo.svg';\nimport './App.css';\nimport {Routes, Route, Redirect, Navigate} from 'react-router-dom'\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from './containers/Quiz'\nimport QuizList from './containers/QuizList/QuizList'\nimport Auth from './containers/Auth/Auth'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport Logout from \"./components/Logout/Logout\";\nimport {connect} from 'react-redux'\nimport {authLogin} from \"./store/actions/auth\";\nimport {useEffect, useLayoutEffect} from \"react\";\n\nfunction App(props) {\n\n    useEffect(() => {\n        props.authLogin()\n    }, []);\n\n    let routes = (\n        <Routes>\n            <Route path={'/auth'} element={<Auth/>}/>\n            <Route path={'/quiz/:id'} element={<Quiz/>}/>\n            <Route path={'/'} element={<QuizList/>}/>\n        </Routes>\n    )\n\n    if(props.isAuthentication){\n        routes = (\n            <Routes>\n                <Route path={'/quiz-creator'} element={<QuizCreator/>}/>\n                <Route path={'/quiz/:id'} element={<Quiz/>}/>\n                <Route path={'/'} element={<QuizList/>}/>\n                <Route path={'/logout'} element = {<Logout/>}/>\n                <Route path='*' element = {<Navigate to={'/'}/>}/>\n            </Routes>\n        )\n    }\n\n  return (\n      <Layout>\n          {routes}\n      </Layout>\n  );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthentication: !!state.auth.token\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        authLogin: () => dispatch(authLogin())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS, QUIZ_IS_FINISHED, RETRY_HANDLER, SET_ACTIVE_QUESTION,\r\n    SET_ANSWER_STATE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz:null,\r\n\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_QUIZES_START: return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n        case FETCH_QUIZES_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            quizes: action.quizes\r\n        }\r\n        case FETCH_QUIZ_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            quiz: action.quiz\r\n        }\r\n        case FETCH_QUIZES_ERROR: return{\r\n            ...state,\r\n            loading: false,\r\n            error: action.error\r\n        }\r\n        case SET_ANSWER_STATE: return{\r\n            ...state,\r\n            answerState: action.answerState,\r\n            results: action.results\r\n        }\r\n        case SET_ACTIVE_QUESTION: return {\r\n            ...state,\r\n            activeQuestion: action.activeQuestion,\r\n            answerState: null\r\n        }\r\n        case QUIZ_IS_FINISHED: return {\r\n            ...state,\r\n            isFinished: true\r\n        }\r\n        case RETRY_HANDLER: return{\r\n            ...state,\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n            isFinished: false,\r\n            results: {}\r\n        }\r\n        default: return state\r\n    }\r\n}","import {CREATE_QUIZ_QUESTION, FINISH_ADD_ERROR, FINISH_ADD_QUIZ} from '../actions/typesCreate'\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n    switch(action.type){\r\n        case CREATE_QUIZ_QUESTION: return {\r\n            ...state,\r\n            quiz: [...state.quiz, action.quiz]\r\n        }\r\n        case FINISH_ADD_QUIZ: return {\r\n            ...state,\r\n            quiz: []\r\n        }\r\n        case FINISH_ADD_ERROR: return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.error\r\n        }\r\n        default: return state\r\n    }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    token:null\r\n}\r\nexport default function authReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case AUTH_SUCCESS: return {\r\n            ...state,\r\n            token: action.token\r\n        }\r\n        case AUTH_LOGOUT: return {\r\n            ...state,\r\n            token: null\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from \"./quiz\";\r\nimport createReducer from \"./create\";\r\nimport authReducer from './auth'\r\n\r\nexport default combineReducers({\r\n    quiz:quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\nconst app = (\n    <Provider store = {store}>\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>\n    </Provider>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}